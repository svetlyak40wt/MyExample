;;; -*- Mode: Lisp -*-

(in-package rw)

(html-file-page ("index")
  (html
   (:HEAD (:TITLE "metacopy")
          (generate-shared-headers))
   (:BODY
    (generate-two-line-header "metacopy"
                              "When once isn't enough")
    
    ((:DIV :CLASS "contents")
     (generate-system-sidebar)
     
     ((:DIV :CLASS "system-description")
      (:H3 "What it is")
      (:P "Metacopy is a toolkit for specifying how to make copies of objects. Use defcopy-methods to describe the copying of slots and copy-thing to make copies. What could be easier?")
      (:P "Metacopy relies on " (link :moptilities) ". There is " (link :tinaa) " documentation " (link :metacopy-tinaa :title "available") ".")

      ((:A :id "mailing-lists"))
      (:h3 "Mailing Lists")
      (:ul 
       (:li ((:a :href "http://common-lisp.net/cgi-bin/mailman/listinfo/metacopy-announce") "metacopy-announce")
            ": A low volume, read only list for announcements.")
       
       (:li ((:a :href "http://common-lisp.net/cgi-bin/mailman/listinfo/metacopy-devel") "metacopy-devel")
            ": A list for questions, patches, bug reports, and so on; It's for everything other than announcements."))
      
      ((:A :id "downloads"))
      (:H3 "Where is it")
      (:P "A " (rw:link :darcs) " repository is available. You'll need " (rw:link :moptilities) " and " (link :metatilities) " too. The commands to get them are listed below:")
      (:PRE
       "darcs get http://common-lisp.net/project/cl-containers/moptilities/darcs/moptilities
darcs get http://common-lisp.net/project/metacopy/darcs/metacopy")
      (:P "Metacopy is " (rw:link :asdf-install :title "ASDF installable") ". Its CLiki home is right " (rw:link :metacopy-cliki :title "where") " you'd expect.")
      (:P "There's also a handy " (rw:link :metacopy-package :title "gzipped tar file") ".")
      
      ((:A :id "news"))
      (:H3 "What is happening")
      ((:TABLE :CLASS "system-news") 
       (:TR
        (:TH "11 April 2006")
        (:TD "Removed dependencies on metatilities; added a few simple tests (using " (link :lift) "."))
       
       (:TR
        (:TH "22 March 2006")
        (:TD "Initial setup")))))
    
    ((:DIV :CLASS "footer")
     (generate-button-row 
      (format nil "Last updated: ~A" 
              (format-date "%A, %e %B %Y" (get-universal-time))))))))